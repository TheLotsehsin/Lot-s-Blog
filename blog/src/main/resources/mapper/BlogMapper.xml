<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lot.blog.dao.BlogDao">
    <!--后台查询博客信息-->
    <resultMap id="blog" type="com.lot.blog.queryEntity.BlogQuery">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="published" column="published"></result>
        <result property="recommend" column="recommend"></result>
        <result property="updateTime" column="update_time"></result>
        <result property="typeId" column="type_id"></result>
        <association property="type" javaType="com.lot.blog.entity.Type">
            <id property="id" column="id"></id>
            <result property="name" column="name"></result>
        </association>
    </resultMap>

    <!--查询所有文章-->
    <select id="getAllBlog" resultType="Blog">
        select * from `t_blog`
    </select>

    <!--通过标题查文章-->
    <select id="getAllBlogQuery" resultMap="blog">
       select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from `t_blog` b left outer join
        `t_type` t on b.type_id = t.id order by b.update_time desc
    </select>

    <!--添加文章-->
    <insert id="saveBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        insert into `t_blog` (id,title, content, first_picture, flag,
            views, comment_count, appreciation, share_statement, commentabled, published,
            recommend, create_time, update_time, type_id, user_id,tag_ids, description)
            values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{commentCount},#{appreciation},
            #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
            #{updateTime},#{typeId},#{userId},#{tagIds},#{description});
    </insert>

    <!--添加文章、标签关联表-->
    <insert id="saveBlogAndTag">
        insert into t_blog_tag (blog_id,tag_id) values (#{blogId},#{tagId});
    </insert>

    <!--删除文章-->
    <delete id="deleteBlog">
        delete from `t_blog` where id = #{id}
    </delete>

    <!--删除文章、标签关联表-->
    <delete id="deleteBlogAndTag">
        delete from `t_blog_tag` where blog_id = #{blogId}
    </delete>

    <!--条件查询-->
    <select id="getBlogByTitleOrTypeOrRecommend" parameterType="com.lot.blog.queryEntity.SearchBlog" resultMap="blog">
        <bind name="pattern" value="'%' + title + '%'"  ></bind>
        select b.id,b.title,b.published,b.recommend,b.update_time,b.type_id,t.id,t.name from `t_blog` b,`t_type` t
        <where>
            <if test="1 == 1">
                t.id = b.type_id
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="title != null">
                and title like #{pattern}
            </if>
            <if test="recommend != null">
                and recommend = #{recommend}
            </if>
        </where>

    </select>

    <resultMap id="showblog" type="com.lot.blog.queryEntity.ShowBlog">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="content" column="content"></result>
        <result property="firstPicture" column="first_picture"></result>
        <result property="flag" column="flag"></result>
        <result property="views" column="views"></result>
        <result property="commentCount" column="comment_count"></result>
        <result property="appreciation" column="appreciation"></result>
        <result property="shareStatement" column="share_statement"></result>
        <result property="commentabled" column="commentabled"></result>
        <result property="published" column="published"></result>
        <result property="recommend" column="recommend"></result>
        <result property="createTime" column="create_time"></result>
        <result property="updateTime" column="update_time"></result>
    </resultMap>

    <!--通过id查文章-->
    <select id="getBlogById" resultMap="showblog">
        select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled  from `t_blog` b where b.id = #{id}
    </select>

    <!--更新文章--><!--没有传views传入的views为null-->
    <update id="updateBlog" parameterType="com.lot.blog.queryEntity.ShowBlog">
        update `t_blog` set published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentabled = #{commentabled} ,update_time = #{updateTime} where id = #{id};
    </update>


    <resultMap id="recommendBlog" type="com.lot.blog.queryEntity.ReCommendBlog">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="recommend" property="recommend"/>
    </resultMap>

    <!--查询推荐博客-->
    <select id="getAllReCommendBlog" resultMap="recommendBlog">
        select * from `t_blog` b where b.recommend = true and b.published = true order by b.update_time desc limit 4
    </select>

    <!--<resultMap id="detailedBlog" type="com.lot.blog.queryEntity.DetailBlog">
        <id property="id" column="id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="typeName" column="name"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>-->

    <!--显示博客详细信息-->
    <select id="getDetailedBlog" resultType="com.lot.blog.queryEntity.DetailBlog">
        select b.id,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name typeName
        from `t_blog` b,`t_user` u,`t_type` t
        where b.user_id = u.id and b.type_id = t.id and b.id = #{id}
    </select>


    <resultMap id="indexPageBlog" type="com.lot.blog.queryEntity.IndexPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>

        <result property="typeName" column="name"/>

        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <!--主页展示博客-->
    <select id="getAllIndexPageBlog" resultType="com.lot.blog.queryEntity.IndexPageBlog">
       select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
        t.id typeId,t.name typeName,u.nickname, u.avatar
        from `t_blog` b, `t_type` t,`t_user` u
        where  b.published = true and b.type_id = t.id and  u.id = b.user_id order by b.update_time desc
    </select>

    <!--通过标签查询博客-->
    <select id="getIndexBlogByTagId" resultMap="indexPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
        t.id typeId,t.name,u.nickname, u.avatar
        from `t_blog` b,`t_tag` ta,`t_type` t,`t_blog_tag` bt,`t_user` u
        where b.published = true and bt.blog_id = b.id and bt.tag_id = ta.id
        and b.type_id = t.id and  u.id = b.user_id and ta.id = #{id}
    </select>

    <!--通过分类查询博客-->
    <select id="getIndexBlogByTypeId" resultMap="indexPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
        t.id typeId,t.name,u.nickname, u.avatar
        from `t_blog` b,`t_type` t,`t_user` u
        where b.published = true and b.type_id = t.id and  u.id = b.user_id and t.id = #{id}
    </select>
    
    <!--主页查询博客信息-->
    <select id="getIndexPageBlogByTitleOrContent" resultMap="indexPageBlog">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
        t.name,u.nickname, u.avatar
        from `t_blog` b, `t_type` t,`t_user` u
        where  b.published = true and b.type_id = t.id and  u.id = b.user_id
        and (b.description like #{pattern} or b.title like #{pattern} or b.content like #{pattern})  order by b.update_time desc
    </select>

    <select id="findBlogByYear" resultType="Blog">
        <bind name="pattern" value="'%'+ updateTime +'%'"></bind>
        select * from `t_blog` where update_time like #{pattern}
    </select>

    <select id="findGroupYear" resultType="String">
        select DATE_FORMAT(b.update_time, '%Y')from `t_blog` b order by b.update_time desc
    </select>

    <!--自动更新浏览数-->
    <update id="updateViews">
        update `t_blog` set views = views+1 where id = #{id}
    </update>

    <!--查询并更新评论数-->
    <update id="updateCommentCounts">
        update `t_blog` t set t.comment_count =
        (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = #{id}
    </update>

    <!--统计浏览数、评论数、博客数-->
    <select id="countBlog" resultType="int">
        select count(*) from `t_blog`
    </select>

    <select id="countComments">
        select count(*) from `t_comment`
    </select>

    <select id="sumViews">
        select sum(views) from `t_blog`
    </select>
</mapper>