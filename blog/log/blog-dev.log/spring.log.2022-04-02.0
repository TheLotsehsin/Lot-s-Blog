2022-04-02 00:24:05.577  WARN 9460 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h20m3s438ms752µs600ns).
2022-04-02 00:56:26.065  INFO 9460 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-04-02 00:56:26.090  INFO 9460 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-04-02 01:23:14.902  INFO 22032 --- [restartedMain] com.lot.blog.BlogApplication             : Starting BlogApplication using Java 11.0.3 on DESKTOP-H8KV7I2 with PID 22032 (D:\Java文件\java框架\blog\target\classes started by 22709 in D:\Java文件\java框架\blog)
2022-04-02 01:23:14.903 DEBUG 22032 --- [restartedMain] com.lot.blog.BlogApplication             : Running with Spring Boot v2.6.3, Spring v5.3.15
2022-04-02 01:23:14.904  INFO 22032 --- [restartedMain] com.lot.blog.BlogApplication             : The following profiles are active: dev
2022-04-02 01:23:14.957  INFO 22032 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-02 01:23:14.957  INFO 22032 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-02 01:23:16.109  INFO 22032 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-04-02 01:23:16.117  INFO 22032 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-04-02 01:23:16.117  INFO 22032 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-04-02 01:23:16.190  INFO 22032 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-04-02 01:23:16.190  INFO 22032 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1233 ms
2022-04-02 01:23:16.916  INFO 22032 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-04-02 01:23:17.281  INFO 22032 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-04-02 01:23:17.313  INFO 22032 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-04-02 01:23:17.324  INFO 22032 --- [restartedMain] com.lot.blog.BlogApplication             : Started BlogApplication in 2.993 seconds (JVM running for 4.314)
2022-04-02 01:23:22.000  INFO 22032 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-02 01:23:22.001  INFO 22032 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-04-02 01:23:22.002  INFO 22032 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-04-02 01:23:22.038  INFO 22032 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,index', args=[1, {}]}
2022-04-02 01:23:22.095  INFO 22032 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-04-02 01:23:22.422  INFO 22032 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-04-02 01:23:22.429 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.B.getAllIndexPageBlog_COUNT      : ==>  Preparing: SELECT count(0) FROM `t_blog` b, `t_type` t, `t_user` u WHERE b.published = true AND b.type_id = t.id AND u.id = b.user_id
2022-04-02 01:23:22.447 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.B.getAllIndexPageBlog_COUNT      : ==> Parameters: 
2022-04-02 01:23:22.622 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.B.getAllIndexPageBlog_COUNT      : <==      Total: 1
2022-04-02 01:23:22.626 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllIndexPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.id typeId,t.name typeName,u.nickname, u.avatar from `t_blog` b, `t_type` t,`t_user` u where b.published = true and b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ?
2022-04-02 01:23:22.627 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllIndexPageBlog    : ==> Parameters: 5(Integer)
2022-04-02 01:23:22.637 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllIndexPageBlog    : <==      Total: 1
2022-04-02 01:23:22.640 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TypeDao.getIndexType    : ==>  Preparing: select t.id tid,t.name,b.id bid ,b.title from `t_type`t,`t_blog` b where b.published = true and t.id = b.type_id order by t.id desc limit 4
2022-04-02 01:23:22.640 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TypeDao.getIndexType    : ==> Parameters: 
2022-04-02 01:23:22.655 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TypeDao.getIndexType    : <==      Total: 1
2022-04-02 01:23:22.656 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TagDao.getIndexTag      : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from `t_tag` t,`t_blog` b,`t_blog_tag` bt where b.published = true and bt.blog_id = b.id and bt.tag_id = t.id order by tid desc limit 6
2022-04-02 01:23:22.656 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TagDao.getIndexTag      : ==> Parameters: 
2022-04-02 01:23:22.663 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TagDao.getIndexTag      : <==      Total: 2
2022-04-02 01:23:22.664 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllReCommendBlog    : ==>  Preparing: select * from `t_blog` b where b.recommend = true and b.published = true order by b.update_time desc limit 4
2022-04-02 01:23:22.664 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllReCommendBlog    : ==> Parameters: 
2022-04-02 01:23:22.669 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllReCommendBlog    : <==      Total: 1
2022-04-02 01:23:22.671  INFO 22032 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Result : {}index
2022-04-02 01:23:27.626  INFO 22032 --- [http-nio-8080-exec-5] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/blog/11', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,enterBlog', args=[11, {}]}
2022-04-02 01:23:27.633 DEBUG 22032 --- [http-nio-8080-exec-5] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==>  Preparing: select b.id,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name typeName from `t_blog` b,`t_user` u,`t_type` t where b.user_id = u.id and b.type_id = t.id and b.id = ?
2022-04-02 01:23:27.634 DEBUG 22032 --- [http-nio-8080-exec-5] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==> Parameters: 11(Long)
2022-04-02 01:23:27.638 DEBUG 22032 --- [http-nio-8080-exec-5] c.lot.blog.dao.BlogDao.getDetailedBlog   : <==      Total: 1
2022-04-02 01:23:27.665 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.BlogDao.updateViews     : ==>  Preparing: update `t_blog` set views = views+1 where id = ?
2022-04-02 01:23:27.665 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.BlogDao.updateViews     : ==> Parameters: 11(Long)
2022-04-02 01:23:27.785 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.BlogDao.updateViews     : <==    Updates: 1
2022-04-02 01:23:27.786 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:23:27.786 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 11(Long)
2022-04-02 01:23:27.792 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:23:27.793 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:23:27.793 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:23:27.795 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 0
2022-04-02 01:23:27.795  INFO 22032 --- [http-nio-8080-exec-5] com.lot.blog.aspect.LogAspect            : Result : {}blog
2022-04-02 01:24:03.099  WARN 22032 --- [http-nio-8080-exec-7] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [269] milliseconds.
2022-04-02 01:24:03.131  INFO 22032 --- [http-nio-8080-exec-7] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.CommentController,post', args=[Comment(id=null, nickname=lot, email=2270967387@qq.com, avatar=null, content=测试评论1, createTime=null, blogId=null, parentCommentId=null, parentComment=Comment(id=-1, nickname=null, email=null, avatar=null, content=null, createTime=null, blogId=null, parentCommentId=null, parentComment=null, parentNickname=null, blog=null, adminComment=false, replyComment=[]), parentNickname=null, blog=Blog(id=11, title=null, content=null, firstPicture=null, flag=null, views=null, commentCount=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, description=null, userId=null, typeId=null, tagIds=null, comment=null, user=null, type=null, tags=[], comments=[]), adminComment=false, replyComment=[]), org.apache.catalina.session.StandardSessionFacade@4b12860, {comment=Comment(id=null, nickname=lot, email=2270967387@qq.com, avatar=null, content=测试评论1, createTime=null, blogId=null, parentCommentId=null, parentComment=Comment(id=-1, nickname=null, email=null, avatar=null, content=null, createTime=null, blogId=null, parentCommentId=null, parentComment=null, parentNickname=null, blog=null, adminComment=false, replyComment=[]), parentNickname=null, blog=Blog(id=11, title=null, content=null, firstPicture=null, flag=null, views=null, commentCount=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, description=null, userId=null, typeId=null, tagIds=null, comment=null, user=null, type=null, tags=[], comments=[]), adminComment=false, replyComment=[]), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2022-04-02 01:24:03.136 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:24:03.136 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 11(Long)
2022-04-02 01:24:03.137 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:24:03.137 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.CommentDao.saveComment  : ==>  Preparing: insert into `t_comment`(id,nickname,email,content,avatar,create_time,blog_id,parent_comment_id,admin_comment) values(?,?,?,?,?,?,?,?,?)
2022-04-02 01:24:03.140 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.CommentDao.saveComment  : ==> Parameters: null, lot(String), 2270967387@qq.com(String), 测试评论1(String), /img/me.png(String), 2022-04-02 01:24:03.135(Timestamp), 11(Long), -1(Long), false(Boolean)
2022-04-02 01:24:03.190 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.CommentDao.saveComment  : <==    Updates: 1
2022-04-02 01:24:03.191 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:03.191 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:24:03.194 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:24:03.195 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:03.195 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:24:03.196 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 0
2022-04-02 01:24:03.196  INFO 22032 --- [http-nio-8080-exec-7] com.lot.blog.aspect.LogAspect            : Result : {}redirect:/comments/11
2022-04-02 01:24:03.212  INFO 22032 --- [http-nio-8080-exec-8] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/comments/11', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.CommentController,comments', args=[11, {}]}
2022-04-02 01:24:03.212 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:03.212 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:24:03.214 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:24:03.214 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:03.215 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:24:03.215 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 0
2022-04-02 01:24:03.216  INFO 22032 --- [http-nio-8080-exec-8] com.lot.blog.aspect.LogAspect            : Result : {}blog :: commentList
2022-04-02 01:24:26.905  INFO 22032 --- [http-nio-8080-exec-2] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.CommentController,post', args=[Comment(id=null, nickname=lot1, email=lzx2270967387@163.com, avatar=null, content=回复测试评论, createTime=null, blogId=null, parentCommentId=null, parentComment=Comment(id=12, nickname=null, email=null, avatar=null, content=null, createTime=null, blogId=null, parentCommentId=null, parentComment=null, parentNickname=null, blog=null, adminComment=false, replyComment=[]), parentNickname=null, blog=Blog(id=11, title=null, content=null, firstPicture=null, flag=null, views=null, commentCount=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, description=null, userId=null, typeId=null, tagIds=null, comment=null, user=null, type=null, tags=[], comments=[]), adminComment=false, replyComment=[]), org.apache.catalina.session.StandardSessionFacade@4b12860, {comment=Comment(id=null, nickname=lot1, email=lzx2270967387@163.com, avatar=null, content=回复测试评论, createTime=null, blogId=null, parentCommentId=null, parentComment=Comment(id=12, nickname=null, email=null, avatar=null, content=null, createTime=null, blogId=null, parentCommentId=null, parentComment=null, parentNickname=null, blog=null, adminComment=false, replyComment=[]), parentNickname=null, blog=Blog(id=11, title=null, content=null, firstPicture=null, flag=null, views=null, commentCount=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, description=null, userId=null, typeId=null, tagIds=null, comment=null, user=null, type=null, tags=[], comments=[]), adminComment=false, replyComment=[]), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2022-04-02 01:24:26.906 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:24:26.906 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 11(Long)
2022-04-02 01:24:26.914 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:24:26.915 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.CommentDao.saveComment  : ==>  Preparing: insert into `t_comment`(id,nickname,email,content,avatar,create_time,blog_id,parent_comment_id,admin_comment) values(?,?,?,?,?,?,?,?,?)
2022-04-02 01:24:26.915 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.CommentDao.saveComment  : ==> Parameters: null, lot1(String), lzx2270967387@163.com(String), 回复测试评论(String), /img/me.png(String), 2022-04-02 01:24:26.905(Timestamp), 11(Long), 12(Long), false(Boolean)
2022-04-02 01:24:26.922 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.CommentDao.saveComment  : <==    Updates: 1
2022-04-02 01:24:26.923 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:26.923 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:24:26.924 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:24:26.925 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:26.925 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:24:26.926 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 1
2022-04-02 01:24:26.927 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:26.927 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 13(Long)
2022-04-02 01:24:26.928 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 0
2022-04-02 01:24:26.928  INFO 22032 --- [http-nio-8080-exec-2] com.lot.blog.aspect.LogAspect            : Result : {}redirect:/comments/11
2022-04-02 01:24:26.931  INFO 22032 --- [http-nio-8080-exec-10] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/comments/11', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.CommentController,comments', args=[11, {}]}
2022-04-02 01:24:26.932 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:26.932 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:24:26.933 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:24:26.934 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:26.934 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:24:26.936 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 1
2022-04-02 01:24:26.937 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:26.937 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 13(Long)
2022-04-02 01:24:26.938 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 0
2022-04-02 01:24:26.938  INFO 22032 --- [http-nio-8080-exec-10] com.lot.blog.aspect.LogAspect            : Result : {}blog :: commentList
2022-04-02 01:24:47.897  INFO 22032 --- [http-nio-8080-exec-8] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.CommentController,post', args=[Comment(id=null, nickname=lot2, email=2270967387@qq.com, avatar=null, content=回复测试评论1, createTime=null, blogId=null, parentCommentId=null, parentComment=Comment(id=13, nickname=null, email=null, avatar=null, content=null, createTime=null, blogId=null, parentCommentId=null, parentComment=null, parentNickname=null, blog=null, adminComment=false, replyComment=[]), parentNickname=null, blog=Blog(id=11, title=null, content=null, firstPicture=null, flag=null, views=null, commentCount=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, description=null, userId=null, typeId=null, tagIds=null, comment=null, user=null, type=null, tags=[], comments=[]), adminComment=false, replyComment=[]), org.apache.catalina.session.StandardSessionFacade@4b12860, {comment=Comment(id=null, nickname=lot2, email=2270967387@qq.com, avatar=null, content=回复测试评论1, createTime=null, blogId=null, parentCommentId=null, parentComment=Comment(id=13, nickname=null, email=null, avatar=null, content=null, createTime=null, blogId=null, parentCommentId=null, parentComment=null, parentNickname=null, blog=null, adminComment=false, replyComment=[]), parentNickname=null, blog=Blog(id=11, title=null, content=null, firstPicture=null, flag=null, views=null, commentCount=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, description=null, userId=null, typeId=null, tagIds=null, comment=null, user=null, type=null, tags=[], comments=[]), adminComment=false, replyComment=[]), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2022-04-02 01:24:47.898 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:24:47.898 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 11(Long)
2022-04-02 01:24:47.906 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:24:47.907 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.CommentDao.saveComment  : ==>  Preparing: insert into `t_comment`(id,nickname,email,content,avatar,create_time,blog_id,parent_comment_id,admin_comment) values(?,?,?,?,?,?,?,?,?)
2022-04-02 01:24:47.909 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.CommentDao.saveComment  : ==> Parameters: null, lot2(String), 2270967387@qq.com(String), 回复测试评论1(String), /img/me.png(String), 2022-04-02 01:24:47.897(Timestamp), 11(Long), 13(Long), false(Boolean)
2022-04-02 01:24:47.914 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.CommentDao.saveComment  : <==    Updates: 1
2022-04-02 01:24:47.915 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:47.915 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:24:47.918 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:24:47.918 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:47.919 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:24:47.921 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 1
2022-04-02 01:24:47.922 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:47.923 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 13(Long)
2022-04-02 01:24:47.924 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:24:47.925 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:47.926 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 14(Long)
2022-04-02 01:24:47.926 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 0
2022-04-02 01:24:47.927  INFO 22032 --- [http-nio-8080-exec-8] com.lot.blog.aspect.LogAspect            : Result : {}redirect:/comments/11
2022-04-02 01:24:47.930  INFO 22032 --- [http-nio-8080-exec-9] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/comments/11', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.CommentController,comments', args=[11, {}]}
2022-04-02 01:24:47.930 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:47.930 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:24:47.932 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:24:47.933 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:47.933 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:24:47.934 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 1
2022-04-02 01:24:47.934 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:47.935 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 13(Long)
2022-04-02 01:24:47.936 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:24:47.937 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:24:47.937 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 14(Long)
2022-04-02 01:24:47.938 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 0
2022-04-02 01:24:47.939  INFO 22032 --- [http-nio-8080-exec-9] com.lot.blog.aspect.LogAspect            : Result : {}blog :: commentList
2022-04-02 01:26:38.153 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.UserDao.checkUser       : ==>  Preparing: SELECT * FROM `t_user` where username=? AND password= ?
2022-04-02 01:26:38.154 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.UserDao.checkUser       : ==> Parameters: 2270(String), 202cb962ac59075b964b07152d234b70(String)
2022-04-02 01:26:38.160 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.UserDao.checkUser       : <==      Total: 1
2022-04-02 01:26:39.582 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id
2022-04-02 01:26:39.583 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2022-04-02 01:26:39.591 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2022-04-02 01:26:39.594 DEBUG 22032 --- [http-nio-8080-exec-7] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id order by b.id desc LIMIT ?
2022-04-02 01:26:39.594 DEBUG 22032 --- [http-nio-8080-exec-7] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2022-04-02 01:26:39.595 DEBUG 22032 --- [http-nio-8080-exec-7] c.lot.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 1
2022-04-02 01:26:39.596 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:26:39.596 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:26:39.597 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:27:00.806  INFO 22032 --- [http-nio-8080-exec-10] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.CommentController,post', args=[Comment(id=null, nickname=lotsehsin, email=lzx2270967387@163.com, avatar=null, content=博主回复测试, createTime=null, blogId=null, parentCommentId=null, parentComment=Comment(id=14, nickname=null, email=null, avatar=null, content=null, createTime=null, blogId=null, parentCommentId=null, parentComment=null, parentNickname=null, blog=null, adminComment=false, replyComment=[]), parentNickname=null, blog=Blog(id=11, title=null, content=null, firstPicture=null, flag=null, views=null, commentCount=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, description=null, userId=null, typeId=null, tagIds=null, comment=null, user=null, type=null, tags=[], comments=[]), adminComment=false, replyComment=[]), org.apache.catalina.session.StandardSessionFacade@4b12860, {comment=Comment(id=null, nickname=lotsehsin, email=lzx2270967387@163.com, avatar=null, content=博主回复测试, createTime=null, blogId=null, parentCommentId=null, parentComment=Comment(id=14, nickname=null, email=null, avatar=null, content=null, createTime=null, blogId=null, parentCommentId=null, parentComment=null, parentNickname=null, blog=null, adminComment=false, replyComment=[]), parentNickname=null, blog=Blog(id=11, title=null, content=null, firstPicture=null, flag=null, views=null, commentCount=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, description=null, userId=null, typeId=null, tagIds=null, comment=null, user=null, type=null, tags=[], comments=[]), adminComment=false, replyComment=[]), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2022-04-02 01:27:00.807 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:27:00.808 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 11(Long)
2022-04-02 01:27:00.816 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:27:00.817 DEBUG 22032 --- [http-nio-8080-exec-10] com.lot.blog.dao.CommentDao.saveComment  : ==>  Preparing: insert into `t_comment`(id,nickname,email,content,avatar,create_time,blog_id,parent_comment_id,admin_comment) values(?,?,?,?,?,?,?,?,?)
2022-04-02 01:27:00.819 DEBUG 22032 --- [http-nio-8080-exec-10] com.lot.blog.dao.CommentDao.saveComment  : ==> Parameters: null, lotsehsin(String), lzx2270967387@163.com(String), 博主回复测试(String), https://unsplash.it/100/100?image=1005(String), 2022-04-02 01:27:00.807(Timestamp), 11(Long), 14(Long), true(Boolean)
2022-04-02 01:27:00.825 DEBUG 22032 --- [http-nio-8080-exec-10] com.lot.blog.dao.CommentDao.saveComment  : <==    Updates: 1
2022-04-02 01:27:00.826 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.826 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:27:00.829 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:27:00.830 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.830 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:27:00.832 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 1
2022-04-02 01:27:00.833 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.834 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 13(Long)
2022-04-02 01:27:00.835 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:27:00.836 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.836 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 14(Long)
2022-04-02 01:27:00.840 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:27:00.841 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.841 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 15(Long)
2022-04-02 01:27:00.842 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 0
2022-04-02 01:27:00.842  INFO 22032 --- [http-nio-8080-exec-10] com.lot.blog.aspect.LogAspect            : Result : {}redirect:/comments/11
2022-04-02 01:27:00.846  INFO 22032 --- [http-nio-8080-exec-6] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/comments/11', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.CommentController,comments', args=[11, {}]}
2022-04-02 01:27:00.846 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.846 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:27:00.848 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:27:00.848 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.849 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:27:00.850 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 1
2022-04-02 01:27:00.851 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.851 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 13(Long)
2022-04-02 01:27:00.852 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:27:00.853 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.853 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 14(Long)
2022-04-02 01:27:00.854 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:27:00.854 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:00.854 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 15(Long)
2022-04-02 01:27:00.855 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 0
2022-04-02 01:27:00.855  INFO 22032 --- [http-nio-8080-exec-6] com.lot.blog.aspect.LogAspect            : Result : {}blog :: commentList
2022-04-02 01:27:34.662  INFO 22032 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/blog/11', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,enterBlog', args=[11, {}]}
2022-04-02 01:27:34.663 DEBUG 22032 --- [http-nio-8080-exec-1] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==>  Preparing: select b.id,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name typeName from `t_blog` b,`t_user` u,`t_type` t where b.user_id = u.id and b.type_id = t.id and b.id = ?
2022-04-02 01:27:34.663 DEBUG 22032 --- [http-nio-8080-exec-1] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==> Parameters: 11(Long)
2022-04-02 01:27:34.667 DEBUG 22032 --- [http-nio-8080-exec-1] c.lot.blog.dao.BlogDao.getDetailedBlog   : <==      Total: 1
2022-04-02 01:27:34.668 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.BlogDao.updateViews     : ==>  Preparing: update `t_blog` set views = views+1 where id = ?
2022-04-02 01:27:34.669 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.BlogDao.updateViews     : ==> Parameters: 11(Long)
2022-04-02 01:27:34.673 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.BlogDao.updateViews     : <==    Updates: 1
2022-04-02 01:27:34.673 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:27:34.673 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 11(Long)
2022-04-02 01:27:34.680 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:27:34.680 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:34.681 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:27:34.682 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:27:34.682 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:34.682 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:27:34.683 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 1
2022-04-02 01:27:34.683 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:34.684 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 13(Long)
2022-04-02 01:27:34.684 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:27:34.685 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:34.685 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 14(Long)
2022-04-02 01:27:34.686 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:27:34.686 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:27:34.686 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 15(Long)
2022-04-02 01:27:34.687 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 0
2022-04-02 01:27:34.689  INFO 22032 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Result : {}blog
2022-04-02 01:28:43.178 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from `t_blog` b where b.id = ?
2022-04-02 01:28:43.179 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.BlogDao.getBlogById     : ==> Parameters: 11(Long)
2022-04-02 01:28:43.181 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2022-04-02 01:28:43.181 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:28:43.182 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:28:43.182 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:28:43.183 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TagDao.getAllTag        : ==>  Preparing: select * from `t_tag`
2022-04-02 01:28:43.183 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TagDao.getAllTag        : ==> Parameters: 
2022-04-02 01:28:43.185 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TagDao.getAllTag        : <==      Total: 2
2022-04-02 01:30:08.537 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TypeDao.getType         : ==>  Preparing: select * from `t_type` where id=?
2022-04-02 01:30:08.538 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TypeDao.getType         : ==> Parameters: 27(Long)
2022-04-02 01:30:08.541 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TypeDao.getType         : <==      Total: 1
2022-04-02 01:30:08.542 DEBUG 22032 --- [http-nio-8080-exec-9] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==>  Preparing: delete from `t_blog_tag` where blog_id = ?
2022-04-02 01:30:08.542 DEBUG 22032 --- [http-nio-8080-exec-9] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==> Parameters: 11(Long)
2022-04-02 01:30:08.567 DEBUG 22032 --- [http-nio-8080-exec-9] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : <==    Updates: 2
2022-04-02 01:30:08.567 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.BlogDao.updateBlog      : ==>  Preparing: update `t_blog` set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?;
2022-04-02 01:30:08.568 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.BlogDao.updateBlog      : ==> Parameters: true(Boolean), 转载(String), 你记忆里的哆啦A梦是怎样的呢？(String), *出处：bilibili*
*原文链接：https://www.bilibili.com/read/cv11402351?from=search&spm_id_from=333.337.0.0 *

------------
爷青回！哆啦A梦和大雄回来了！

如果给你机会选择一个超能力

你会选择什么？

是隐身？是瞬移？还是穿越时空？

当然是哆啦A梦的口袋啦！

能拿出那么多厉害的道具

一次满足N种需求！

能拿出那么多厉害的道具

一次满足N种需求！

看看下面这些道具，是不是你的童年好“玩伴”呢？

叮叮！竹蜻蜓

这个道具绝对是响当当的童年玩具TOP1了

小时候最喜欢的一件事

就是搓搓竹蜻蜓看它起飞

然后开心得把它捡回来

慢慢的，我们长大了

知道了竹蜻蜓不会飞

也明白了任意门是不存在的

但那段有小叮当陪伴的日子

永远是真实且温暖的

所以哆啦A梦会永远陪着我们长大吗？

当然(>ω･* )ﾉ(String), 27(Long), https://img1.baidu.com/it/u=3446698331,3169470922&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500(String), 记忆里的哆啦A梦(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-04-02 01:30:08.541(Timestamp), 11(Long)
2022-04-02 01:30:08.588 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.BlogDao.updateBlog      : <==    Updates: 1
2022-04-02 01:30:08.595 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id
2022-04-02 01:30:08.596 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2022-04-02 01:30:08.596 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2022-04-02 01:30:08.598 DEBUG 22032 --- [http-nio-8080-exec-8] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id order by b.id desc LIMIT ?
2022-04-02 01:30:08.598 DEBUG 22032 --- [http-nio-8080-exec-8] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2022-04-02 01:30:08.599 DEBUG 22032 --- [http-nio-8080-exec-8] c.lot.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 1
2022-04-02 01:30:08.599 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:30:08.599 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:30:08.600 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:30:11.387  INFO 22032 --- [http-nio-8080-exec-6] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/blog/11', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,enterBlog', args=[11, {}]}
2022-04-02 01:30:11.388 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==>  Preparing: select b.id,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name typeName from `t_blog` b,`t_user` u,`t_type` t where b.user_id = u.id and b.type_id = t.id and b.id = ?
2022-04-02 01:30:11.388 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==> Parameters: 11(Long)
2022-04-02 01:30:11.391 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.getDetailedBlog   : <==      Total: 1
2022-04-02 01:30:11.392 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.updateViews     : ==>  Preparing: update `t_blog` set views = views+1 where id = ?
2022-04-02 01:30:11.393 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.updateViews     : ==> Parameters: 11(Long)
2022-04-02 01:30:11.400 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.updateViews     : <==    Updates: 1
2022-04-02 01:30:11.401 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:30:11.401 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 11(Long)
2022-04-02 01:30:11.403 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:30:11.403 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:30:11.403 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:30:11.404 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:30:11.405 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:30:11.405 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:30:11.406 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 1
2022-04-02 01:30:11.406 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:30:11.406 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 13(Long)
2022-04-02 01:30:11.407 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:30:11.408 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:30:11.408 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 14(Long)
2022-04-02 01:30:11.408 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:30:11.409 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:30:11.409 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 15(Long)
2022-04-02 01:30:11.410 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 0
2022-04-02 01:30:11.410  INFO 22032 --- [http-nio-8080-exec-6] com.lot.blog.aspect.LogAspect            : Result : {}blog
2022-04-02 01:35:01.982 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:35:01.982 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:35:01.983 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:35:01.983 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TagDao.getAllTag        : ==>  Preparing: select * from `t_tag`
2022-04-02 01:35:01.984 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TagDao.getAllTag        : ==> Parameters: 
2022-04-02 01:35:01.989 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TagDao.getAllTag        : <==      Total: 2
2022-04-02 01:35:01.990 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:35:01.990 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:35:01.991 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:35:01.993 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TagDao.getAllTag        : ==>  Preparing: select * from `t_tag`
2022-04-02 01:35:01.993 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TagDao.getAllTag        : ==> Parameters: 
2022-04-02 01:35:01.993 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TagDao.getAllTag        : <==      Total: 2
2022-04-02 01:37:00.875 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getType         : ==>  Preparing: select * from `t_type` where id=?
2022-04-02 01:37:00.875 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getType         : ==> Parameters: 27(Long)
2022-04-02 01:37:00.877 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getType         : <==      Total: 1
2022-04-02 01:37:00.878 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.BlogDao.saveBlog        : ==>  Preparing: insert into `t_blog` (id,title, content, first_picture, flag, views, comment_count, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id,tag_ids, description) values (?,?,?,?,?,?,?,?, ?,?,?,?,?, ?,?,?,?,?);
2022-04-02 01:37:00.879 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.BlogDao.saveBlog        : ==> Parameters: null, 最小生成树-prim算法(String), 普里姆算法实现
下面，将利用Java实现普里姆算法。

package test;

/**
 * 最小生成树：普里姆算法
 */
public class MinSpanTree {
    int[][] arc;                        // 邻接矩阵
    int INFINITY = Integer.MAX_VALUE;   // 顶点个数最大值
    int MAXVEX;                         // 顶点个数

    /**
     * 普里姆算法实现最小生成树
     */
    public void prim(){
        int[] lowcost = new int[MAXVEX];// 保存相关顶点间边的权值，每次循环都要从中获取到最小权值和顶点下标
        int minWeight;                  // 最小权值
        int minVertex;                  // 最小权值顶点
        int sumWeight = 0;              // 权值总和
        //先初始化将第一行的顶点权值存放到权值数组中
        for(int i = 0;i < MAXVEX;i++){
            lowcost[i] = arc[0][i];
        }

        System.out.println("从顶点0开始查找");
        for(int i = 1;i < MAXVEX;i++){
            //每次循环都找出顶点权值的最小的权值
            minWeight = INFINITY;   // 初始化最小权值为INFINITY
            minVertex = 0;
            for(int j = 1;j < MAXVEX;j++){
                if(lowcost[j] != 0 && lowcost[j] < minWeight){
                    minWeight = lowcost[j]; // 则让当前权值成为最小值
                    minVertex = j;          // 将当前最小值的下标存入minVertex
                }
            }
            //找到目标顶点minVertex,他的权值为minweight。
            System.out.println("找到顶点:"+minVertex+" 权值为："+minWeight);
            sumWeight += minWeight;
            // 根据找到的顶点minVertex，将这一行的所有相关联的顶点权值添加到权值数组中
            lowcost[minVertex] = 0; // 将当前顶点的权值设置为0，表示此顶点已经完成任务
            for(int j = 1;j < MAXVEX;j++){
                if(lowcost[j] != 0&& arc[minVertex][j] < lowcost[j]){
                    lowcost[j] = arc[minVertex][j]; // 将较小权值存入lowcost
                }
            }
        }
        System.out.println("最小权值总和为："+sumWeight);
    }

    private void createGraph(int index) {
        MAXVEX = index;
        arc = new int[index][index];
        int[] a0 = { 0, 10, INFINITY, INFINITY, INFINITY, 11, INFINITY, INFINITY, INFINITY };
        int[] a1 = { 10, 0, 18, INFINITY, INFINITY, INFINITY, 16, INFINITY, 12 };
        int[] a2 = { INFINITY, INFINITY, 0, 22, INFINITY, INFINITY, INFINITY, INFINITY, 8 };
        int[] a3 = { INFINITY, INFINITY, 22, 0, 20, INFINITY, 24, 16, 21 };
        int[] a4 = { INFINITY, INFINITY, INFINITY, 20, 0, 26, INFINITY, 7, INFINITY };
        int[] a5 = { 11, INFINITY, INFINITY, INFINITY, 26, 0, 17, INFINITY, INFINITY };
        int[] a6 = { INFINITY, 16, INFINITY, 24, INFINITY, 17, 0, 19, INFINITY };
        int[] a7 = { INFINITY, INFINITY, INFINITY, 16, 7, INFINITY, 19, 0, INFINITY };
        int[] a8 = { INFINITY, 12, 8, 21, INFINITY, INFINITY, INFINITY, INFINITY, 0 };
        arc[0] = a0;
        arc[1] = a1;
        arc[2] = a2;
        arc[3] = a3;
        arc[4] = a4;
        arc[5] = a5;
        arc[6] = a6;
        arc[7] = a7;
        arc[8] = a8;
    }
    public static void main(String[] args) {
        MinSpanTree graph = new MinSpanTree();
        graph.createGraph(9);
        graph.prim();
    }
}
(String), https://img1.baidu.com/it/u=3446698331,3169470922&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500(String), (String), 0(Integer), 0(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-04-02 01:37:00.877(Timestamp), 2022-04-02 01:37:00.877(Timestamp), 27(Long), 1(Long), (String), prim算法求最小生成树(String)
2022-04-02 01:37:00.887 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.BlogDao.saveBlog        : <==    Updates: 1
2022-04-02 01:37:00.909 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id
2022-04-02 01:37:00.910 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2022-04-02 01:37:00.912 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2022-04-02 01:37:00.919 DEBUG 22032 --- [http-nio-8080-exec-2] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id order by b.id desc LIMIT ?
2022-04-02 01:37:00.919 DEBUG 22032 --- [http-nio-8080-exec-2] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2022-04-02 01:37:00.921 DEBUG 22032 --- [http-nio-8080-exec-2] c.lot.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 2
2022-04-02 01:37:00.921 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:37:00.921 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:37:00.922 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:37:05.629  INFO 22032 --- [http-nio-8080-exec-4] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,index', args=[1, {}]}
2022-04-02 01:37:05.632 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.B.getAllIndexPageBlog_COUNT      : ==>  Preparing: SELECT count(0) FROM `t_blog` b, `t_type` t, `t_user` u WHERE b.published = true AND b.type_id = t.id AND u.id = b.user_id
2022-04-02 01:37:05.632 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.B.getAllIndexPageBlog_COUNT      : ==> Parameters: 
2022-04-02 01:37:05.638 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.B.getAllIndexPageBlog_COUNT      : <==      Total: 1
2022-04-02 01:37:05.639 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllIndexPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.id typeId,t.name typeName,u.nickname, u.avatar from `t_blog` b, `t_type` t,`t_user` u where b.published = true and b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ?
2022-04-02 01:37:05.639 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllIndexPageBlog    : ==> Parameters: 5(Integer)
2022-04-02 01:37:05.640 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllIndexPageBlog    : <==      Total: 2
2022-04-02 01:37:05.641 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TypeDao.getIndexType    : ==>  Preparing: select t.id tid,t.name,b.id bid ,b.title from `t_type`t,`t_blog` b where b.published = true and t.id = b.type_id order by t.id desc limit 4
2022-04-02 01:37:05.641 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TypeDao.getIndexType    : ==> Parameters: 
2022-04-02 01:37:05.643 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TypeDao.getIndexType    : <==      Total: 2
2022-04-02 01:37:05.644 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TagDao.getIndexTag      : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from `t_tag` t,`t_blog` b,`t_blog_tag` bt where b.published = true and bt.blog_id = b.id and bt.tag_id = t.id order by tid desc limit 6
2022-04-02 01:37:05.644 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TagDao.getIndexTag      : ==> Parameters: 
2022-04-02 01:37:05.646 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TagDao.getIndexTag      : <==      Total: 0
2022-04-02 01:37:05.646 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllReCommendBlog    : ==>  Preparing: select * from `t_blog` b where b.recommend = true and b.published = true order by b.update_time desc limit 4
2022-04-02 01:37:05.647 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllReCommendBlog    : ==> Parameters: 
2022-04-02 01:37:05.648 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllReCommendBlog    : <==      Total: 2
2022-04-02 01:37:05.648  INFO 22032 --- [http-nio-8080-exec-4] com.lot.blog.aspect.LogAspect            : Result : {}index
2022-04-02 01:37:08.491  INFO 22032 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/blog/12', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,enterBlog', args=[12, {}]}
2022-04-02 01:37:08.492 DEBUG 22032 --- [http-nio-8080-exec-1] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==>  Preparing: select b.id,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name typeName from `t_blog` b,`t_user` u,`t_type` t where b.user_id = u.id and b.type_id = t.id and b.id = ?
2022-04-02 01:37:08.493 DEBUG 22032 --- [http-nio-8080-exec-1] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==> Parameters: 12(Long)
2022-04-02 01:37:08.496 DEBUG 22032 --- [http-nio-8080-exec-1] c.lot.blog.dao.BlogDao.getDetailedBlog   : <==      Total: 1
2022-04-02 01:37:08.501 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.BlogDao.updateViews     : ==>  Preparing: update `t_blog` set views = views+1 where id = ?
2022-04-02 01:37:08.501 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.BlogDao.updateViews     : ==> Parameters: 12(Long)
2022-04-02 01:37:08.643 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.BlogDao.updateViews     : <==    Updates: 1
2022-04-02 01:37:08.644 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:37:08.644 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 12(Long)
2022-04-02 01:37:08.646 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:37:08.646 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:37:08.647 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 12(Long), -1(Long)
2022-04-02 01:37:08.648 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 0
2022-04-02 01:37:08.648  INFO 22032 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Result : {}blog
2022-04-02 01:37:36.466  INFO 22032 --- [http-nio-8080-exec-10] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/blog/12', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,enterBlog', args=[12, {}]}
2022-04-02 01:37:36.467 DEBUG 22032 --- [http-nio-8080-exec-10] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==>  Preparing: select b.id,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name typeName from `t_blog` b,`t_user` u,`t_type` t where b.user_id = u.id and b.type_id = t.id and b.id = ?
2022-04-02 01:37:36.468 DEBUG 22032 --- [http-nio-8080-exec-10] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==> Parameters: 12(Long)
2022-04-02 01:37:36.470 DEBUG 22032 --- [http-nio-8080-exec-10] c.lot.blog.dao.BlogDao.getDetailedBlog   : <==      Total: 1
2022-04-02 01:37:36.475 DEBUG 22032 --- [http-nio-8080-exec-10] com.lot.blog.dao.BlogDao.updateViews     : ==>  Preparing: update `t_blog` set views = views+1 where id = ?
2022-04-02 01:37:36.475 DEBUG 22032 --- [http-nio-8080-exec-10] com.lot.blog.dao.BlogDao.updateViews     : ==> Parameters: 12(Long)
2022-04-02 01:37:36.481 DEBUG 22032 --- [http-nio-8080-exec-10] com.lot.blog.dao.BlogDao.updateViews     : <==    Updates: 1
2022-04-02 01:37:36.482 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:37:36.482 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 12(Long)
2022-04-02 01:37:36.483 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:37:36.483 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:37:36.483 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 12(Long), -1(Long)
2022-04-02 01:37:36.484 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 0
2022-04-02 01:37:36.484  INFO 22032 --- [http-nio-8080-exec-10] com.lot.blog.aspect.LogAspect            : Result : {}blog
2022-04-02 01:41:58.153 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from `t_blog` b where b.id = ?
2022-04-02 01:41:58.153 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.BlogDao.getBlogById     : ==> Parameters: 12(Long)
2022-04-02 01:41:58.155 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2022-04-02 01:41:58.156 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:41:58.156 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:41:58.158 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:41:58.159 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TagDao.getAllTag        : ==>  Preparing: select * from `t_tag`
2022-04-02 01:41:58.159 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TagDao.getAllTag        : ==> Parameters: 
2022-04-02 01:41:58.159 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TagDao.getAllTag        : <==      Total: 2
2022-04-02 01:45:03.847 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TypeDao.getType         : ==>  Preparing: select * from `t_type` where id=?
2022-04-02 01:45:03.847 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TypeDao.getType         : ==> Parameters: 27(Long)
2022-04-02 01:45:03.859 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.TypeDao.getType         : <==      Total: 1
2022-04-02 01:45:03.860 DEBUG 22032 --- [http-nio-8080-exec-9] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==>  Preparing: delete from `t_blog_tag` where blog_id = ?
2022-04-02 01:45:03.860 DEBUG 22032 --- [http-nio-8080-exec-9] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==> Parameters: 12(Long)
2022-04-02 01:45:03.862 DEBUG 22032 --- [http-nio-8080-exec-9] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : <==    Updates: 0
2022-04-02 01:45:03.863 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.BlogDao.updateBlog      : ==>  Preparing: update `t_blog` set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?;
2022-04-02 01:45:03.863 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.BlogDao.updateBlog      : ==> Parameters: true(Boolean), (String), 最小生成树-prim算法(String), 普里姆算法实现
下面，将利用Java实现普里姆算法。

```java
package test;

/**
 * 最小生成树：普里姆算法
 */
public class MinSpanTree {
    int[][] arc;                        // 邻接矩阵
    int INFINITY = Integer.MAX_VALUE;   // 顶点个数最大值
    int MAXVEX;                         // 顶点个数

    /**
     * 普里姆算法实现最小生成树
     */
    public void prim(){
        int[] lowcost = new int[MAXVEX];// 保存相关顶点间边的权值，每次循环都要从中获取到最小权值和顶点下标
        int minWeight;                  // 最小权值
        int minVertex;                  // 最小权值顶点
        int sumWeight = 0;              // 权值总和
        //先初始化将第一行的顶点权值存放到权值数组中
        for(int i = 0;i < MAXVEX;i++){
            lowcost[i] = arc[0][i];
        }

        System.out.println("从顶点0开始查找");
        for(int i = 1;i < MAXVEX;i++){
            //每次循环都找出顶点权值的最小的权值
            minWeight = INFINITY;   // 初始化最小权值为INFINITY
            minVertex = 0;
            for(int j = 1;j < MAXVEX;j++){
                if(lowcost[j] != 0 && lowcost[j] < minWeight){
                    minWeight = lowcost[j]; // 则让当前权值成为最小值
                    minVertex = j;          // 将当前最小值的下标存入minVertex
                }
            }
            //找到目标顶点minVertex,他的权值为minweight。
            System.out.println("找到顶点:"+minVertex+" 权值为："+minWeight);
            sumWeight += minWeight;
            // 根据找到的顶点minVertex，将这一行的所有相关联的顶点权值添加到权值数组中
            lowcost[minVertex] = 0; // 将当前顶点的权值设置为0，表示此顶点已经完成任务
            for(int j = 1;j < MAXVEX;j++){
                if(lowcost[j] != 0&& arc[minVertex][j] < lowcost[j]){
                    lowcost[j] = arc[minVertex][j]; // 将较小权值存入lowcost
                }
            }
        }
        System.out.println("最小权值总和为："+sumWeight);
    }

    private void createGraph(int index) {
        MAXVEX = index;
        arc = new int[index][index];
        int[] a0 = { 0, 10, INFINITY, INFINITY, INFINITY, 11, INFINITY, INFINITY, INFINITY };
        int[] a1 = { 10, 0, 18, INFINITY, INFINITY, INFINITY, 16, INFINITY, 12 };
        int[] a2 = { INFINITY, INFINITY, 0, 22, INFINITY, INFINITY, INFINITY, INFINITY, 8 };
        int[] a3 = { INFINITY, INFINITY, 22, 0, 20, INFINITY, 24, 16, 21 };
        int[] a4 = { INFINITY, INFINITY, INFINITY, 20, 0, 26, INFINITY, 7, INFINITY };
        int[] a5 = { 11, INFINITY, INFINITY, INFINITY, 26, 0, 17, INFINITY, INFINITY };
        int[] a6 = { INFINITY, 16, INFINITY, 24, INFINITY, 17, 0, 19, INFINITY };
        int[] a7 = { INFINITY, INFINITY, INFINITY, 16, 7, INFINITY, 19, 0, INFINITY };
        int[] a8 = { INFINITY, 12, 8, 21, INFINITY, INFINITY, INFINITY, INFINITY, 0 };
        arc[0] = a0;
        arc[1] = a1;
        arc[2] = a2;
        arc[3] = a3;
        arc[4] = a4;
        arc[5] = a5;
        arc[6] = a6;
        arc[7] = a7;
        arc[8] = a8;
    }
    public static void main(String[] args) {
        MinSpanTree graph = new MinSpanTree();
        graph.createGraph(9);
        graph.prim();
    }
}
```
运行结果
[![](https://img-blog.csdn.net/20170911131950705?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXo5MzA2MTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)](http://img-blog.csdn.net/20170911131950705?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXo5MzA2MTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)
(String), 27(Long), https://img1.baidu.com/it/u=3446698331,3169470922&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500(String), prim算法求最小生成树(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-04-02 01:45:03.86(Timestamp), 12(Long)
2022-04-02 01:45:03.871 DEBUG 22032 --- [http-nio-8080-exec-9] com.lot.blog.dao.BlogDao.updateBlog      : <==    Updates: 1
2022-04-02 01:45:03.876 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id
2022-04-02 01:45:03.877 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2022-04-02 01:45:03.880 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2022-04-02 01:45:03.882 DEBUG 22032 --- [http-nio-8080-exec-2] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id order by b.id desc LIMIT ?
2022-04-02 01:45:03.883 DEBUG 22032 --- [http-nio-8080-exec-2] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2022-04-02 01:45:03.884 DEBUG 22032 --- [http-nio-8080-exec-2] c.lot.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 2
2022-04-02 01:45:03.885 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:45:03.885 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:45:03.885 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:45:07.195  INFO 22032 --- [http-nio-8080-exec-10] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/blog/12', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,enterBlog', args=[12, {}]}
2022-04-02 01:45:07.195 DEBUG 22032 --- [http-nio-8080-exec-10] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==>  Preparing: select b.id,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name typeName from `t_blog` b,`t_user` u,`t_type` t where b.user_id = u.id and b.type_id = t.id and b.id = ?
2022-04-02 01:45:07.195 DEBUG 22032 --- [http-nio-8080-exec-10] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==> Parameters: 12(Long)
2022-04-02 01:45:07.201 DEBUG 22032 --- [http-nio-8080-exec-10] c.lot.blog.dao.BlogDao.getDetailedBlog   : <==      Total: 1
2022-04-02 01:45:07.203 DEBUG 22032 --- [http-nio-8080-exec-10] com.lot.blog.dao.BlogDao.updateViews     : ==>  Preparing: update `t_blog` set views = views+1 where id = ?
2022-04-02 01:45:07.203 DEBUG 22032 --- [http-nio-8080-exec-10] com.lot.blog.dao.BlogDao.updateViews     : ==> Parameters: 12(Long)
2022-04-02 01:45:07.214 DEBUG 22032 --- [http-nio-8080-exec-10] com.lot.blog.dao.BlogDao.updateViews     : <==    Updates: 1
2022-04-02 01:45:07.214 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:45:07.214 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 12(Long)
2022-04-02 01:45:07.220 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:45:07.220 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:45:07.220 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 12(Long), -1(Long)
2022-04-02 01:45:07.221 DEBUG 22032 --- [http-nio-8080-exec-10] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 0
2022-04-02 01:45:07.221  INFO 22032 --- [http-nio-8080-exec-10] com.lot.blog.aspect.LogAspect            : Result : {}blog
2022-04-02 01:45:52.123  INFO 22032 --- [http-nio-8080-exec-4] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/blog/11', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,enterBlog', args=[11, {}]}
2022-04-02 01:45:52.124 DEBUG 22032 --- [http-nio-8080-exec-4] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==>  Preparing: select b.id,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name typeName from `t_blog` b,`t_user` u,`t_type` t where b.user_id = u.id and b.type_id = t.id and b.id = ?
2022-04-02 01:45:52.124 DEBUG 22032 --- [http-nio-8080-exec-4] c.lot.blog.dao.BlogDao.getDetailedBlog   : ==> Parameters: 11(Long)
2022-04-02 01:45:52.126 DEBUG 22032 --- [http-nio-8080-exec-4] c.lot.blog.dao.BlogDao.getDetailedBlog   : <==      Total: 1
2022-04-02 01:45:52.127 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.BlogDao.updateViews     : ==>  Preparing: update `t_blog` set views = views+1 where id = ?
2022-04-02 01:45:52.128 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.BlogDao.updateViews     : ==> Parameters: 11(Long)
2022-04-02 01:45:52.136 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.BlogDao.updateViews     : <==    Updates: 1
2022-04-02 01:45:52.136 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.updateCommentCounts    : ==>  Preparing: update `t_blog` t set t.comment_count = (select count(*) from `t_comment` c where c.blog_id = t.id) where t.id = ?
2022-04-02 01:45:52.136 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.updateCommentCounts    : ==> Parameters: 11(Long)
2022-04-02 01:45:52.137 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.updateCommentCounts    : <==    Updates: 1
2022-04-02 01:45:52.138 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:45:52.138 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.C.findByBlogIdParentIdNull       : ==> Parameters: 11(Long), -1(Long)
2022-04-02 01:45:52.139 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.C.findByBlogIdParentIdNull       : <==      Total: 1
2022-04-02 01:45:52.139 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.CommentDao.findParentCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:45:52.139 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.CommentDao.findParentCommend   : ==> Parameters: 11(Long), 12(Long)
2022-04-02 01:45:52.140 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.CommentDao.findParentCommend   : <==      Total: 1
2022-04-02 01:45:52.140 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:45:52.141 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 13(Long)
2022-04-02 01:45:52.141 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:45:52.142 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:45:52.142 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 14(Long)
2022-04-02 01:45:52.142 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 1
2022-04-02 01:45:52.142 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.CommentDao.findChildrenCommend   : ==>  Preparing: select * from `t_comment` c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc
2022-04-02 01:45:52.143 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.CommentDao.findChildrenCommend   : ==> Parameters: 11(Long), 15(Long)
2022-04-02 01:45:52.143 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.d.CommentDao.findChildrenCommend   : <==      Total: 0
2022-04-02 01:45:52.143  INFO 22032 --- [http-nio-8080-exec-4] com.lot.blog.aspect.LogAspect            : Result : {}blog
2022-04-02 01:46:39.299 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from `t_blog` b where b.id = ?
2022-04-02 01:46:39.300 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.BlogDao.getBlogById     : ==> Parameters: 12(Long)
2022-04-02 01:46:39.302 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2022-04-02 01:46:39.302 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:46:39.303 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:46:39.304 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:46:39.304 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TagDao.getAllTag        : ==>  Preparing: select * from `t_tag`
2022-04-02 01:46:39.304 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TagDao.getAllTag        : ==> Parameters: 
2022-04-02 01:46:39.305 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TagDao.getAllTag        : <==      Total: 2
2022-04-02 01:49:36.905  INFO 22032 --- [http-nio-8080-exec-8] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/tags/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.TagShowController,showTags', args=[-1, {}, 1]}
2022-04-02 01:49:36.909 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==>  Preparing: SELECT count(0) FROM `t_tag` t, `t_blog` b, `t_blog_tag` bt WHERE b.published = true AND bt.blog_id = b.id AND bt.tag_id = t.id
2022-04-02 01:49:36.909 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==> Parameters: 
2022-04-02 01:49:36.911 DEBUG 22032 --- [http-nio-8080-exec-8] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : <==      Total: 1
2022-04-02 01:49:36.916 ERROR 22032 --- [http-nio-8080-exec-8] c.l.b.hander.ControllerExceptionHander   : Request URL:http://localhost:8080/tags/-1, Exception : {}

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:458)
	at com.lot.blog.controller.TagShowController.showTags(TagShowController.java:40)
	at com.lot.blog.controller.TagShowController$$FastClassBySpringCGLIB$$b2ecb383.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.lot.blog.controller.TagShowController$$EnhancerBySpringCGLIB$$459fdef8.showTags(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)

2022-04-02 01:49:36.917  WARN 22032 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0]
2022-04-02 01:49:55.733 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TypeDao.getType         : ==>  Preparing: select * from `t_type` where id=?
2022-04-02 01:49:55.733 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TypeDao.getType         : ==> Parameters: 27(Long)
2022-04-02 01:49:55.734 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TypeDao.getType         : <==      Total: 1
2022-04-02 01:49:55.735 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==>  Preparing: delete from `t_blog_tag` where blog_id = ?
2022-04-02 01:49:55.735 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==> Parameters: 12(Long)
2022-04-02 01:49:55.736 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : <==    Updates: 0
2022-04-02 01:49:55.737 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.updateBlog      : ==>  Preparing: update `t_blog` set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?;
2022-04-02 01:49:55.738 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.updateBlog      : ==> Parameters: true(Boolean), (String), 最小生成树-prim算法(String),  普里姆算法实现
下面，将利用Java实现普里姆算法。

```java
package test;

/**
 * 最小生成树：普里姆算法
 */
public class MinSpanTree {
    int[][] arc;                        // 邻接矩阵
    int INFINITY = Integer.MAX_VALUE;   // 顶点个数最大值
    int MAXVEX;                         // 顶点个数

    /**
     * 普里姆算法实现最小生成树
     */
    public void prim(){
        int[] lowcost = new int[MAXVEX];// 保存相关顶点间边的权值，每次循环都要从中获取到最小权值和顶点下标
        int minWeight;                  // 最小权值
        int minVertex;                  // 最小权值顶点
        int sumWeight = 0;              // 权值总和
        //先初始化将第一行的顶点权值存放到权值数组中
        for(int i = 0;i < MAXVEX;i++){
            lowcost[i] = arc[0][i];
        }

        System.out.println("从顶点0开始查找");
        for(int i = 1;i < MAXVEX;i++){
            //每次循环都找出顶点权值的最小的权值
            minWeight = INFINITY;   // 初始化最小权值为INFINITY
            minVertex = 0;
            for(int j = 1;j < MAXVEX;j++){
                if(lowcost[j] != 0 && lowcost[j] < minWeight){
                    minWeight = lowcost[j]; // 则让当前权值成为最小值
                    minVertex = j;          // 将当前最小值的下标存入minVertex
                }
            }
            //找到目标顶点minVertex,他的权值为minweight。
            System.out.println("找到顶点:"+minVertex+" 权值为："+minWeight);
            sumWeight += minWeight;
            // 根据找到的顶点minVertex，将这一行的所有相关联的顶点权值添加到权值数组中
            lowcost[minVertex] = 0; // 将当前顶点的权值设置为0，表示此顶点已经完成任务
            for(int j = 1;j < MAXVEX;j++){
                if(lowcost[j] != 0&& arc[minVertex][j] < lowcost[j]){
                    lowcost[j] = arc[minVertex][j]; // 将较小权值存入lowcost
                }
            }
        }
        System.out.println("最小权值总和为："+sumWeight);
    }

    private void createGraph(int index) {
        MAXVEX = index;
        arc = new int[index][index];
        int[] a0 = { 0, 10, INFINITY, INFINITY, INFINITY, 11, INFINITY, INFINITY, INFINITY };
        int[] a1 = { 10, 0, 18, INFINITY, INFINITY, INFINITY, 16, INFINITY, 12 };
        int[] a2 = { INFINITY, INFINITY, 0, 22, INFINITY, INFINITY, INFINITY, INFINITY, 8 };
        int[] a3 = { INFINITY, INFINITY, 22, 0, 20, INFINITY, 24, 16, 21 };
        int[] a4 = { INFINITY, INFINITY, INFINITY, 20, 0, 26, INFINITY, 7, INFINITY };
        int[] a5 = { 11, INFINITY, INFINITY, INFINITY, 26, 0, 17, INFINITY, INFINITY };
        int[] a6 = { INFINITY, 16, INFINITY, 24, INFINITY, 17, 0, 19, INFINITY };
        int[] a7 = { INFINITY, INFINITY, INFINITY, 16, 7, INFINITY, 19, 0, INFINITY };
        int[] a8 = { INFINITY, 12, 8, 21, INFINITY, INFINITY, INFINITY, INFINITY, 0 };
        arc[0] = a0;
        arc[1] = a1;
        arc[2] = a2;
        arc[3] = a3;
        arc[4] = a4;
        arc[5] = a5;
        arc[6] = a6;
        arc[7] = a7;
        arc[8] = a8;
    }
    public static void main(String[] args) {
        MinSpanTree graph = new MinSpanTree();
        graph.createGraph(9);
        graph.prim();
    }
}
```
运行结果
[![](https://img-blog.csdn.net/20170911131950705?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXo5MzA2MTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)](http://img-blog.csdn.net/20170911131950705?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXo5MzA2MTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)
(String), 27(Long), https://img1.baidu.com/it/u=3446698331,3169470922&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500(String), prim算法求最小生成树(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-04-02 01:49:55.735(Timestamp), 12(Long)
2022-04-02 01:49:55.748 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.updateBlog      : <==    Updates: 1
2022-04-02 01:49:55.754 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id
2022-04-02 01:49:55.754 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2022-04-02 01:49:55.755 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2022-04-02 01:49:55.757 DEBUG 22032 --- [http-nio-8080-exec-2] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id order by b.id desc LIMIT ?
2022-04-02 01:49:55.757 DEBUG 22032 --- [http-nio-8080-exec-2] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2022-04-02 01:49:55.759 DEBUG 22032 --- [http-nio-8080-exec-2] c.lot.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 2
2022-04-02 01:49:55.759 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:49:55.760 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:49:55.760 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:49:58.130 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TagDao.getAllTag_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_tag`
2022-04-02 01:49:58.131 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TagDao.getAllTag_COUNT  : ==> Parameters: 
2022-04-02 01:49:58.154 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TagDao.getAllTag_COUNT  : <==      Total: 1
2022-04-02 01:49:58.154 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TagDao.getAllTag        : ==>  Preparing: SELECT * FROM `t_tag` order by id desc LIMIT ?
2022-04-02 01:49:58.154 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TagDao.getAllTag        : ==> Parameters: 5(Integer)
2022-04-02 01:49:58.155 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TagDao.getAllTag        : <==      Total: 2
2022-04-02 01:50:03.155  INFO 22032 --- [http-nio-8080-exec-2] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.TypeShowController,showTypes', args=[-1, {}, 1]}
2022-04-02 01:50:03.162 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.TypeDao.getIndexType1_COUNT    : ==>  Preparing: SELECT count(0) FROM `t_type` t, `t_blog` b WHERE b.published = true AND t.id = b.type_id
2022-04-02 01:50:03.162 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.TypeDao.getIndexType1_COUNT    : ==> Parameters: 
2022-04-02 01:50:03.164 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.TypeDao.getIndexType1_COUNT    : <==      Total: 1
2022-04-02 01:50:03.165 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getIndexType1   : ==>  Preparing: select t.id tid,t.name,b.id bid ,b.title from `t_type`t,`t_blog` b where b.published = true and t.id = b.type_id LIMIT ?
2022-04-02 01:50:03.165 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getIndexType1   : ==> Parameters: 25(Integer)
2022-04-02 01:50:03.166 DEBUG 22032 --- [http-nio-8080-exec-2] com.lot.blog.dao.TypeDao.getIndexType1   : <==      Total: 2
2022-04-02 01:50:03.167 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getIndexBlogByTypeId   : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.id typeId,t.name,u.nickname, u.avatar from `t_blog` b,`t_type` t,`t_user` u where b.published = true and b.type_id = t.id and u.id = b.user_id and t.id = ?
2022-04-02 01:50:03.167 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getIndexBlogByTypeId   : ==> Parameters: 27(Long)
2022-04-02 01:50:03.169 DEBUG 22032 --- [http-nio-8080-exec-2] c.l.b.dao.BlogDao.getIndexBlogByTypeId   : <==      Total: 2
2022-04-02 01:50:03.170  INFO 22032 --- [http-nio-8080-exec-2] com.lot.blog.aspect.LogAspect            : Result : {}types
2022-04-02 01:50:08.296  INFO 22032 --- [http-nio-8080-exec-3] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/tags/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.TagShowController,showTags', args=[-1, {}, 1]}
2022-04-02 01:50:08.299 DEBUG 22032 --- [http-nio-8080-exec-3] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==>  Preparing: SELECT count(0) FROM `t_tag` t, `t_blog` b, `t_blog_tag` bt WHERE b.published = true AND bt.blog_id = b.id AND bt.tag_id = t.id
2022-04-02 01:50:08.299 DEBUG 22032 --- [http-nio-8080-exec-3] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==> Parameters: 
2022-04-02 01:50:08.300 DEBUG 22032 --- [http-nio-8080-exec-3] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : <==      Total: 1
2022-04-02 01:50:08.301 ERROR 22032 --- [http-nio-8080-exec-3] c.l.b.hander.ControllerExceptionHander   : Request URL:http://localhost:8080/tags/-1, Exception : {}

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:458)
	at com.lot.blog.controller.TagShowController.showTags(TagShowController.java:40)
	at com.lot.blog.controller.TagShowController$$FastClassBySpringCGLIB$$b2ecb383.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.lot.blog.controller.TagShowController$$EnhancerBySpringCGLIB$$459fdef8.showTags(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)

2022-04-02 01:50:08.302  WARN 22032 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0]
2022-04-02 01:50:19.901  INFO 22032 --- [http-nio-8080-exec-7] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,index', args=[1, {}]}
2022-04-02 01:50:19.904 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.d.B.getAllIndexPageBlog_COUNT      : ==>  Preparing: SELECT count(0) FROM `t_blog` b, `t_type` t, `t_user` u WHERE b.published = true AND b.type_id = t.id AND u.id = b.user_id
2022-04-02 01:50:19.904 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.d.B.getAllIndexPageBlog_COUNT      : ==> Parameters: 
2022-04-02 01:50:19.906 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.d.B.getAllIndexPageBlog_COUNT      : <==      Total: 1
2022-04-02 01:50:19.907 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.getAllIndexPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.id typeId,t.name typeName,u.nickname, u.avatar from `t_blog` b, `t_type` t,`t_user` u where b.published = true and b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ?
2022-04-02 01:50:19.907 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.getAllIndexPageBlog    : ==> Parameters: 5(Integer)
2022-04-02 01:50:19.908 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.getAllIndexPageBlog    : <==      Total: 2
2022-04-02 01:50:19.909 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getIndexType    : ==>  Preparing: select t.id tid,t.name,b.id bid ,b.title from `t_type`t,`t_blog` b where b.published = true and t.id = b.type_id order by t.id desc limit 4
2022-04-02 01:50:19.909 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getIndexType    : ==> Parameters: 
2022-04-02 01:50:19.911 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getIndexType    : <==      Total: 2
2022-04-02 01:50:19.912 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TagDao.getIndexTag      : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from `t_tag` t,`t_blog` b,`t_blog_tag` bt where b.published = true and bt.blog_id = b.id and bt.tag_id = t.id order by tid desc limit 6
2022-04-02 01:50:19.912 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TagDao.getIndexTag      : ==> Parameters: 
2022-04-02 01:50:19.912 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TagDao.getIndexTag      : <==      Total: 0
2022-04-02 01:50:19.913 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.getAllReCommendBlog    : ==>  Preparing: select * from `t_blog` b where b.recommend = true and b.published = true order by b.update_time desc limit 4
2022-04-02 01:50:19.913 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.getAllReCommendBlog    : ==> Parameters: 
2022-04-02 01:50:19.914 DEBUG 22032 --- [http-nio-8080-exec-7] c.l.b.dao.BlogDao.getAllReCommendBlog    : <==      Total: 2
2022-04-02 01:50:19.914  INFO 22032 --- [http-nio-8080-exec-7] com.lot.blog.aspect.LogAspect            : Result : {}index
2022-04-02 01:50:22.654  INFO 22032 --- [http-nio-8080-exec-6] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/tags/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.TagShowController,showTags', args=[-1, {}, 1]}
2022-04-02 01:50:22.657 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==>  Preparing: SELECT count(0) FROM `t_tag` t, `t_blog` b, `t_blog_tag` bt WHERE b.published = true AND bt.blog_id = b.id AND bt.tag_id = t.id
2022-04-02 01:50:22.657 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==> Parameters: 
2022-04-02 01:50:22.658 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : <==      Total: 1
2022-04-02 01:50:22.659 ERROR 22032 --- [http-nio-8080-exec-6] c.l.b.hander.ControllerExceptionHander   : Request URL:http://localhost:8080/tags/-1, Exception : {}

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:458)
	at com.lot.blog.controller.TagShowController.showTags(TagShowController.java:40)
	at com.lot.blog.controller.TagShowController$$FastClassBySpringCGLIB$$b2ecb383.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.lot.blog.controller.TagShowController$$EnhancerBySpringCGLIB$$459fdef8.showTags(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)

2022-04-02 01:50:22.660  WARN 22032 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0]
2022-04-02 01:50:32.360 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getAllTag_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_tag`
2022-04-02 01:50:32.360 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getAllTag_COUNT  : ==> Parameters: 
2022-04-02 01:50:32.361 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getAllTag_COUNT  : <==      Total: 1
2022-04-02 01:50:32.362 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getAllTag        : ==>  Preparing: SELECT * FROM `t_tag` order by id desc LIMIT ?
2022-04-02 01:50:32.362 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getAllTag        : ==> Parameters: 5(Integer)
2022-04-02 01:50:32.365 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getAllTag        : <==      Total: 2
2022-04-02 01:50:34.582 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TagDao.getTag           : ==>  Preparing: select * from `t_tag` where id=?
2022-04-02 01:50:34.582 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TagDao.getTag           : ==> Parameters: 8(Long)
2022-04-02 01:50:34.582 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TagDao.getTag           : <==      Total: 1
2022-04-02 01:51:28.288  INFO 22032 --- [http-nio-8080-exec-5] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/tags/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.TagShowController,showTags', args=[-1, {}, 1]}
2022-04-02 01:51:38.108 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==>  Preparing: SELECT count(0) FROM `t_tag` t, `t_blog` b, `t_blog_tag` bt WHERE b.published = true AND bt.blog_id = b.id AND bt.tag_id = t.id
2022-04-02 01:51:38.113 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==> Parameters: 
2022-04-02 01:51:38.120 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : <==      Total: 1
2022-04-02 01:51:51.187 ERROR 22032 --- [http-nio-8080-exec-5] c.l.b.hander.ControllerExceptionHander   : Request URL:http://localhost:8080/tags/-1, Exception : {}

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:458)
	at com.lot.blog.controller.TagShowController.showTags(TagShowController.java:40)
	at com.lot.blog.controller.TagShowController$$FastClassBySpringCGLIB$$b2ecb383.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.lot.blog.controller.TagShowController$$EnhancerBySpringCGLIB$$459fdef8.showTags(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)

2022-04-02 01:51:51.188  WARN 22032 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0]
2022-04-02 01:52:04.971  INFO 22032 --- [http-nio-8080-exec-9] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/tags/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.TagShowController,showTags', args=[-1, {}, 1]}
2022-04-02 01:52:04.976 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==>  Preparing: SELECT count(0) FROM `t_tag` t, `t_blog` b, `t_blog_tag` bt WHERE b.published = true AND bt.blog_id = b.id AND bt.tag_id = t.id
2022-04-02 01:52:04.976 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==> Parameters: 
2022-04-02 01:52:04.978 DEBUG 22032 --- [http-nio-8080-exec-9] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : <==      Total: 1
2022-04-02 01:55:15.000  WARN 22032 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m22s52ms288µs).
2022-04-02 01:55:15.001 ERROR 22032 --- [http-nio-8080-exec-9] c.l.b.hander.ControllerExceptionHander   : Request URL:http://localhost:8080/tags/-1, Exception : {}

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:458)
	at com.lot.blog.controller.TagShowController.showTags(TagShowController.java:40)
	at com.lot.blog.controller.TagShowController$$FastClassBySpringCGLIB$$b2ecb383.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.lot.blog.controller.TagShowController$$EnhancerBySpringCGLIB$$459fdef8.showTags(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)

2022-04-02 01:55:15.003  WARN 22032 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0]
2022-04-02 01:55:15.051 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id
2022-04-02 01:55:15.051 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2022-04-02 01:55:15.058 DEBUG 22032 --- [http-nio-8080-exec-6] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2022-04-02 01:55:15.060 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id order by b.id desc LIMIT ?
2022-04-02 01:55:15.061 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2022-04-02 01:55:15.063 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 2
2022-04-02 01:55:15.064 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id
2022-04-02 01:55:15.064 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2022-04-02 01:55:15.065 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2022-04-02 01:55:15.068 DEBUG 22032 --- [http-nio-8080-exec-4] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id order by b.id desc LIMIT ?
2022-04-02 01:55:15.068 DEBUG 22032 --- [http-nio-8080-exec-4] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2022-04-02 01:55:15.070 DEBUG 22032 --- [http-nio-8080-exec-4] c.lot.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 2
2022-04-02 01:55:15.071 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:55:15.071 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:55:15.072 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:55:15.072 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:55:15.073 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:55:15.073 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:55:26.672 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from `t_blog` b where b.id = ?
2022-04-02 01:55:26.672 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.BlogDao.getBlogById     : ==> Parameters: 11(Long)
2022-04-02 01:55:26.673 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2022-04-02 01:55:26.674 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:55:26.674 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:55:26.675 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:55:26.675 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TagDao.getAllTag        : ==>  Preparing: select * from `t_tag`
2022-04-02 01:55:26.676 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TagDao.getAllTag        : ==> Parameters: 
2022-04-02 01:55:26.679 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TagDao.getAllTag        : <==      Total: 2
2022-04-02 01:55:32.776 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TypeDao.getType         : ==>  Preparing: select * from `t_type` where id=?
2022-04-02 01:55:32.776 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TypeDao.getType         : ==> Parameters: 27(Long)
2022-04-02 01:55:32.777 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TypeDao.getType         : <==      Total: 1
2022-04-02 01:55:32.778 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getTag           : ==>  Preparing: select * from `t_tag` where id=?
2022-04-02 01:55:32.778 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getTag           : ==> Parameters: 7(Long)
2022-04-02 01:55:32.779 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getTag           : <==      Total: 1
2022-04-02 01:55:32.780 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getTag           : ==>  Preparing: select * from `t_tag` where id=?
2022-04-02 01:55:32.780 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getTag           : ==> Parameters: 8(Long)
2022-04-02 01:55:32.781 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.TagDao.getTag           : <==      Total: 1
2022-04-02 01:55:32.781 DEBUG 22032 --- [http-nio-8080-exec-8] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==>  Preparing: delete from `t_blog_tag` where blog_id = ?
2022-04-02 01:55:32.781 DEBUG 22032 --- [http-nio-8080-exec-8] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==> Parameters: 11(Long)
2022-04-02 01:55:32.787 DEBUG 22032 --- [http-nio-8080-exec-8] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : <==    Updates: 0
2022-04-02 01:55:32.788 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.BlogDao.saveBlogAndTag  : ==>  Preparing: insert into t_blog_tag (blog_id,tag_id) values (?,?);
2022-04-02 01:55:32.789 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.BlogDao.saveBlogAndTag  : ==> Parameters: 11(Long), 7(Long)
2022-04-02 01:55:32.794 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.BlogDao.saveBlogAndTag  : <==    Updates: 1
2022-04-02 01:55:32.794 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.BlogDao.saveBlogAndTag  : ==>  Preparing: insert into t_blog_tag (blog_id,tag_id) values (?,?);
2022-04-02 01:55:32.795 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.BlogDao.saveBlogAndTag  : ==> Parameters: 11(Long), 8(Long)
2022-04-02 01:55:32.801 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.BlogDao.saveBlogAndTag  : <==    Updates: 1
2022-04-02 01:55:32.802 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.BlogDao.updateBlog      : ==>  Preparing: update `t_blog` set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?;
2022-04-02 01:55:32.803 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.BlogDao.updateBlog      : ==> Parameters: true(Boolean), 转载(String), 你记忆里的哆啦A梦是怎样的呢？(String), *出处：bilibili*
*原文链接：https://www.bilibili.com/read/cv11402351?from=search&spm_id_from=333.337.0.0 *

------------
爷青回！哆啦A梦和大雄回来了！

如果给你机会选择一个超能力

你会选择什么？

是隐身？是瞬移？还是穿越时空？

当然是哆啦A梦的口袋啦！

能拿出那么多厉害的道具

一次满足N种需求！

能拿出那么多厉害的道具

一次满足N种需求！

看看下面这些道具，是不是你的童年好“玩伴”呢？

叮叮！竹蜻蜓

这个道具绝对是响当当的童年玩具TOP1了

小时候最喜欢的一件事

就是搓搓竹蜻蜓看它起飞

然后开心得把它捡回来

慢慢的，我们长大了

知道了竹蜻蜓不会飞

也明白了任意门是不存在的

但那段有小叮当陪伴的日子

永远是真实且温暖的

所以哆啦A梦会永远陪着我们长大吗？

当然(>ω･* )ﾉ(String), 27(Long), https://img1.baidu.com/it/u=3446698331,3169470922&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500(String), 记忆里的哆啦A梦(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-04-02 01:55:32.781(Timestamp), 11(Long)
2022-04-02 01:55:32.809 DEBUG 22032 --- [http-nio-8080-exec-8] com.lot.blog.dao.BlogDao.updateBlog      : <==    Updates: 1
2022-04-02 01:55:32.815 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id
2022-04-02 01:55:32.815 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2022-04-02 01:55:32.816 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2022-04-02 01:55:32.818 DEBUG 22032 --- [http-nio-8080-exec-1] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id order by b.id desc LIMIT ?
2022-04-02 01:55:32.819 DEBUG 22032 --- [http-nio-8080-exec-1] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2022-04-02 01:55:32.820 DEBUG 22032 --- [http-nio-8080-exec-1] c.lot.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 2
2022-04-02 01:55:32.821 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:55:32.821 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:55:32.823 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:55:47.011  INFO 22032 --- [http-nio-8080-exec-5] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.TypeShowController,showTypes', args=[-1, {}, 1]}
2022-04-02 01:55:47.014 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.dao.TypeDao.getIndexType1_COUNT    : ==>  Preparing: SELECT count(0) FROM `t_type` t, `t_blog` b WHERE b.published = true AND t.id = b.type_id
2022-04-02 01:55:47.015 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.dao.TypeDao.getIndexType1_COUNT    : ==> Parameters: 
2022-04-02 01:55:47.015 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.dao.TypeDao.getIndexType1_COUNT    : <==      Total: 1
2022-04-02 01:55:47.016 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getIndexType1   : ==>  Preparing: select t.id tid,t.name,b.id bid ,b.title from `t_type`t,`t_blog` b where b.published = true and t.id = b.type_id LIMIT ?
2022-04-02 01:55:47.016 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getIndexType1   : ==> Parameters: 25(Integer)
2022-04-02 01:55:47.030 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getIndexType1   : <==      Total: 2
2022-04-02 01:55:47.031 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.dao.BlogDao.getIndexBlogByTypeId   : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.id typeId,t.name,u.nickname, u.avatar from `t_blog` b,`t_type` t,`t_user` u where b.published = true and b.type_id = t.id and u.id = b.user_id and t.id = ?
2022-04-02 01:55:47.031 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.dao.BlogDao.getIndexBlogByTypeId   : ==> Parameters: 27(Long)
2022-04-02 01:55:47.035 DEBUG 22032 --- [http-nio-8080-exec-5] c.l.b.dao.BlogDao.getIndexBlogByTypeId   : <==      Total: 2
2022-04-02 01:55:47.036  INFO 22032 --- [http-nio-8080-exec-5] com.lot.blog.aspect.LogAspect            : Result : {}types
2022-04-02 01:55:53.404  INFO 22032 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/tags/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.TagShowController,showTags', args=[-1, {}, 1]}
2022-04-02 01:55:53.407 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==>  Preparing: SELECT count(0) FROM `t_tag` t, `t_blog` b, `t_blog_tag` bt WHERE b.published = true AND bt.blog_id = b.id AND bt.tag_id = t.id
2022-04-02 01:55:53.407 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==> Parameters: 
2022-04-02 01:55:53.409 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : <==      Total: 1
2022-04-02 01:55:53.410 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TagDao.getIndexTag1     : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from `t_tag` t,`t_blog` b,`t_blog_tag` bt where b.published = true and bt.blog_id = b.id and bt.tag_id = t.id LIMIT ?
2022-04-02 01:55:53.411 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TagDao.getIndexTag1     : ==> Parameters: 25(Integer)
2022-04-02 01:55:53.413 DEBUG 22032 --- [http-nio-8080-exec-1] com.lot.blog.dao.TagDao.getIndexTag1     : <==      Total: 2
2022-04-02 01:55:53.413 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getIndexBlogByTagId    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.id typeId,t.name,u.nickname, u.avatar from `t_blog` b,`t_tag` ta,`t_type` t,`t_blog_tag` bt,`t_user` u where b.published = true and bt.blog_id = b.id and bt.tag_id = ta.id and b.type_id = t.id and u.id = b.user_id and ta.id = ?
2022-04-02 01:55:53.414 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getIndexBlogByTagId    : ==> Parameters: 7(Long)
2022-04-02 01:55:53.415 DEBUG 22032 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getIndexBlogByTagId    : <==      Total: 1
2022-04-02 01:55:53.415  INFO 22032 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Result : {}tags
2022-04-02 01:55:55.553  INFO 22032 --- [http-nio-8080-exec-3] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/tags/8', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.TagShowController,showTags', args=[8, {}, 1]}
2022-04-02 01:55:55.557 DEBUG 22032 --- [http-nio-8080-exec-3] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==>  Preparing: SELECT count(0) FROM `t_tag` t, `t_blog` b, `t_blog_tag` bt WHERE b.published = true AND bt.blog_id = b.id AND bt.tag_id = t.id
2022-04-02 01:55:55.557 DEBUG 22032 --- [http-nio-8080-exec-3] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : ==> Parameters: 
2022-04-02 01:55:55.559 DEBUG 22032 --- [http-nio-8080-exec-3] c.l.blog.dao.TagDao.getIndexTag1_COUNT   : <==      Total: 1
2022-04-02 01:55:55.560 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TagDao.getIndexTag1     : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from `t_tag` t,`t_blog` b,`t_blog_tag` bt where b.published = true and bt.blog_id = b.id and bt.tag_id = t.id LIMIT ?
2022-04-02 01:55:55.560 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TagDao.getIndexTag1     : ==> Parameters: 25(Integer)
2022-04-02 01:55:55.562 DEBUG 22032 --- [http-nio-8080-exec-3] com.lot.blog.dao.TagDao.getIndexTag1     : <==      Total: 2
2022-04-02 01:55:55.563 DEBUG 22032 --- [http-nio-8080-exec-3] c.l.b.dao.BlogDao.getIndexBlogByTagId    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.id typeId,t.name,u.nickname, u.avatar from `t_blog` b,`t_tag` ta,`t_type` t,`t_blog_tag` bt,`t_user` u where b.published = true and bt.blog_id = b.id and bt.tag_id = ta.id and b.type_id = t.id and u.id = b.user_id and ta.id = ?
2022-04-02 01:55:55.563 DEBUG 22032 --- [http-nio-8080-exec-3] c.l.b.dao.BlogDao.getIndexBlogByTagId    : ==> Parameters: 8(Long)
2022-04-02 01:55:55.565 DEBUG 22032 --- [http-nio-8080-exec-3] c.l.b.dao.BlogDao.getIndexBlogByTagId    : <==      Total: 1
2022-04-02 01:55:55.566  INFO 22032 --- [http-nio-8080-exec-3] com.lot.blog.aspect.LogAspect            : Result : {}tags
2022-04-02 01:56:07.987 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from `t_blog` b where b.id = ?
2022-04-02 01:56:07.988 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.BlogDao.getBlogById     : ==> Parameters: 12(Long)
2022-04-02 01:56:07.989 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2022-04-02 01:56:07.990 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:56:07.990 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:56:07.990 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:56:07.991 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TagDao.getAllTag        : ==>  Preparing: select * from `t_tag`
2022-04-02 01:56:07.991 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TagDao.getAllTag        : ==> Parameters: 
2022-04-02 01:56:07.991 DEBUG 22032 --- [http-nio-8080-exec-5] com.lot.blog.dao.TagDao.getAllTag        : <==      Total: 2
2022-04-02 01:56:12.837 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getType         : ==>  Preparing: select * from `t_type` where id=?
2022-04-02 01:56:12.838 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getType         : ==> Parameters: 27(Long)
2022-04-02 01:56:12.838 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TypeDao.getType         : <==      Total: 1
2022-04-02 01:56:12.839 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TagDao.getTag           : ==>  Preparing: select * from `t_tag` where id=?
2022-04-02 01:56:12.839 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TagDao.getTag           : ==> Parameters: 8(Long)
2022-04-02 01:56:12.839 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.TagDao.getTag           : <==      Total: 1
2022-04-02 01:56:12.840 DEBUG 22032 --- [http-nio-8080-exec-7] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==>  Preparing: delete from `t_blog_tag` where blog_id = ?
2022-04-02 01:56:12.840 DEBUG 22032 --- [http-nio-8080-exec-7] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==> Parameters: 12(Long)
2022-04-02 01:56:12.840 DEBUG 22032 --- [http-nio-8080-exec-7] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : <==    Updates: 0
2022-04-02 01:56:12.841 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.BlogDao.saveBlogAndTag  : ==>  Preparing: insert into t_blog_tag (blog_id,tag_id) values (?,?);
2022-04-02 01:56:12.841 DEBUG 22032 --- [http-nio-8080-exec-7] com.lot.blog.dao.BlogDao.saveBlogAndTag  : ==> Parameters: 12(Long), 8(Long)
2022-04-02 01:56:12.949 ERROR 22032 --- [http-nio-8080-exec-7] c.l.b.hander.ControllerExceptionHander   : Request URL:http://localhost:8080/admin/blogs/12, Exception : {}

org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '8' for key 't_blog_tag.PRIMARY'
### The error may exist in file [D:\Java文件\java框架\blog\target\classes\mapper\BlogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into t_blog_tag (blog_id,tag_id) values (?,?);
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '8' for key 't_blog_tag.PRIMARY'
; Duplicate entry '8' for key 't_blog_tag.PRIMARY'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '8' for key 't_blog_tag.PRIMARY'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy71.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy72.saveBlogAndTag(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy73.saveBlogAndTag(Unknown Source)
	at com.lot.blog.service.impl.BlogServiceImpl.updateBlog(BlogServiceImpl.java:75)
	at com.lot.blog.controller.admin.BlogController.updateBlog(BlogController.java:122)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '8' for key 't_blog_tag.PRIMARY'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:371)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy106.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy104.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 69 common frames omitted

2022-04-02 01:56:12.952  WARN 22032 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DuplicateKeyException: <EOL><EOL>### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '8' for key 't_blog_tag.PRIMARY'<EOL><EOL>### The error may exist in file [D:\Java文件\java框架\blog\target\classes\mapper\BlogMapper.xml]<EOL><EOL>### The error may involve defaultParameterMap<EOL><EOL>### The error occurred while setting parameters<EOL><EOL>### SQL: insert into t_blog_tag (blog_id,tag_id) values (?,?);<EOL><EOL>### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '8' for key 't_blog_tag.PRIMARY'<EOL>; Duplicate entry '8' for key 't_blog_tag.PRIMARY'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '8' for key 't_blog_tag.PRIMARY']
2022-04-02 01:57:27.316 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TypeDao.getType         : ==>  Preparing: select * from `t_type` where id=?
2022-04-02 01:57:27.316 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TypeDao.getType         : ==> Parameters: 27(Long)
2022-04-02 01:57:27.318 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TypeDao.getType         : <==      Total: 1
2022-04-02 01:57:27.319 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TagDao.getTag           : ==>  Preparing: select * from `t_tag` where id=?
2022-04-02 01:57:27.319 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TagDao.getTag           : ==> Parameters: 8(Long)
2022-04-02 01:57:27.320 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.TagDao.getTag           : <==      Total: 1
2022-04-02 01:57:27.320 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==>  Preparing: delete from `t_blog_tag` where blog_id = ?
2022-04-02 01:57:27.321 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : ==> Parameters: 12(Long)
2022-04-02 01:57:27.321 DEBUG 22032 --- [http-nio-8080-exec-6] c.lot.blog.dao.BlogDao.deleteBlogAndTag  : <==    Updates: 0
2022-04-02 01:57:27.321 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.saveBlogAndTag  : ==>  Preparing: insert into t_blog_tag (blog_id,tag_id) values (?,?);
2022-04-02 01:57:27.322 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.saveBlogAndTag  : ==> Parameters: 12(Long), 8(Long)
2022-04-02 01:57:27.325 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.saveBlogAndTag  : <==    Updates: 1
2022-04-02 01:57:27.326 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.updateBlog      : ==>  Preparing: update `t_blog` set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?;
2022-04-02 01:57:27.329 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.updateBlog      : ==> Parameters: true(Boolean), (String), 最小生成树-prim算法(String),  普里姆算法实现
下面，将利用Java实现普里姆算法。

```java
package test;

/**
 * 最小生成树：普里姆算法
 */
public class MinSpanTree {
    int[][] arc;                        // 邻接矩阵
    int INFINITY = Integer.MAX_VALUE;   // 顶点个数最大值
    int MAXVEX;                         // 顶点个数

    /**
     * 普里姆算法实现最小生成树
     */
    public void prim(){
        int[] lowcost = new int[MAXVEX];// 保存相关顶点间边的权值，每次循环都要从中获取到最小权值和顶点下标
        int minWeight;                  // 最小权值
        int minVertex;                  // 最小权值顶点
        int sumWeight = 0;              // 权值总和
        //先初始化将第一行的顶点权值存放到权值数组中
        for(int i = 0;i < MAXVEX;i++){
            lowcost[i] = arc[0][i];
        }

        System.out.println("从顶点0开始查找");
        for(int i = 1;i < MAXVEX;i++){
            //每次循环都找出顶点权值的最小的权值
            minWeight = INFINITY;   // 初始化最小权值为INFINITY
            minVertex = 0;
            for(int j = 1;j < MAXVEX;j++){
                if(lowcost[j] != 0 && lowcost[j] < minWeight){
                    minWeight = lowcost[j]; // 则让当前权值成为最小值
                    minVertex = j;          // 将当前最小值的下标存入minVertex
                }
            }
            //找到目标顶点minVertex,他的权值为minweight。
            System.out.println("找到顶点:"+minVertex+" 权值为："+minWeight);
            sumWeight += minWeight;
            // 根据找到的顶点minVertex，将这一行的所有相关联的顶点权值添加到权值数组中
            lowcost[minVertex] = 0; // 将当前顶点的权值设置为0，表示此顶点已经完成任务
            for(int j = 1;j < MAXVEX;j++){
                if(lowcost[j] != 0&& arc[minVertex][j] < lowcost[j]){
                    lowcost[j] = arc[minVertex][j]; // 将较小权值存入lowcost
                }
            }
        }
        System.out.println("最小权值总和为："+sumWeight);
    }

    private void createGraph(int index) {
        MAXVEX = index;
        arc = new int[index][index];
        int[] a0 = { 0, 10, INFINITY, INFINITY, INFINITY, 11, INFINITY, INFINITY, INFINITY };
        int[] a1 = { 10, 0, 18, INFINITY, INFINITY, INFINITY, 16, INFINITY, 12 };
        int[] a2 = { INFINITY, INFINITY, 0, 22, INFINITY, INFINITY, INFINITY, INFINITY, 8 };
        int[] a3 = { INFINITY, INFINITY, 22, 0, 20, INFINITY, 24, 16, 21 };
        int[] a4 = { INFINITY, INFINITY, INFINITY, 20, 0, 26, INFINITY, 7, INFINITY };
        int[] a5 = { 11, INFINITY, INFINITY, INFINITY, 26, 0, 17, INFINITY, INFINITY };
        int[] a6 = { INFINITY, 16, INFINITY, 24, INFINITY, 17, 0, 19, INFINITY };
        int[] a7 = { INFINITY, INFINITY, INFINITY, 16, 7, INFINITY, 19, 0, INFINITY };
        int[] a8 = { INFINITY, 12, 8, 21, INFINITY, INFINITY, INFINITY, INFINITY, 0 };
        arc[0] = a0;
        arc[1] = a1;
        arc[2] = a2;
        arc[3] = a3;
        arc[4] = a4;
        arc[5] = a5;
        arc[6] = a6;
        arc[7] = a7;
        arc[8] = a8;
    }
    public static void main(String[] args) {
        MinSpanTree graph = new MinSpanTree();
        graph.createGraph(9);
        graph.prim();
    }
}
```
运行结果
[![](https://img-blog.csdn.net/20170911131950705?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXo5MzA2MTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)](http://img-blog.csdn.net/20170911131950705?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveXo5MzA2MTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)
(String), 27(Long), https://img1.baidu.com/it/u=3446698331,3169470922&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500(String), prim算法求最小生成树(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-04-02 01:57:27.32(Timestamp), 12(Long)
2022-04-02 01:57:27.336 DEBUG 22032 --- [http-nio-8080-exec-6] com.lot.blog.dao.BlogDao.updateBlog      : <==    Updates: 1
2022-04-02 01:57:27.342 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id
2022-04-02 01:57:27.343 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2022-04-02 01:57:27.346 DEBUG 22032 --- [http-nio-8080-exec-4] c.l.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2022-04-02 01:57:27.348 DEBUG 22032 --- [http-nio-8080-exec-4] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM `t_blog` b LEFT OUTER JOIN `t_type` t ON b.type_id = t.id order by b.id desc LIMIT ?
2022-04-02 01:57:27.349 DEBUG 22032 --- [http-nio-8080-exec-4] c.lot.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2022-04-02 01:57:27.361 DEBUG 22032 --- [http-nio-8080-exec-4] c.lot.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 2
2022-04-02 01:57:27.361 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TypeDao.getAllType      : ==>  Preparing: select * from `t_type`
2022-04-02 01:57:27.361 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TypeDao.getAllType      : ==> Parameters: 
2022-04-02 01:57:27.362 DEBUG 22032 --- [http-nio-8080-exec-4] com.lot.blog.dao.TypeDao.getAllType      : <==      Total: 1
2022-04-02 01:57:40.261  INFO 22032 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-04-02 01:57:40.270  INFO 22032 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-04-02 18:16:02.193  INFO 2576 --- [restartedMain] com.lot.blog.BlogApplication             : Starting BlogApplication using Java 11.0.3 on DESKTOP-H8KV7I2 with PID 2576 (D:\Java文件\java框架\blog\target\classes started by 22709 in D:\Java文件\java框架\blog)
2022-04-02 18:16:02.195 DEBUG 2576 --- [restartedMain] com.lot.blog.BlogApplication             : Running with Spring Boot v2.6.3, Spring v5.3.15
2022-04-02 18:16:02.195  INFO 2576 --- [restartedMain] com.lot.blog.BlogApplication             : The following profiles are active: dev
2022-04-02 18:16:02.275  INFO 2576 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-04-02 18:16:02.275  INFO 2576 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-04-02 18:16:04.101  INFO 2576 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-04-02 18:16:04.112  INFO 2576 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-04-02 18:16:04.113  INFO 2576 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-04-02 18:16:04.229  INFO 2576 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-04-02 18:16:04.229  INFO 2576 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1953 ms
2022-04-02 18:16:05.850  INFO 2576 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-04-02 18:16:06.391  INFO 2576 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-04-02 18:16:06.434  INFO 2576 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-04-02 18:16:06.445  INFO 2576 --- [restartedMain] com.lot.blog.BlogApplication             : Started BlogApplication in 5.2 seconds (JVM running for 8.719)
2022-04-02 18:16:36.536  INFO 2576 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-02 18:16:36.537  INFO 2576 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-04-02 18:16:36.538  INFO 2576 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-04-02 18:16:36.578  INFO 2576 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Request : {}RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.lot.blog.controller.IndexController,index', args=[1, {}]}
2022-04-02 18:16:36.627  INFO 2576 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-04-02 18:16:37.045  INFO 2576 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-04-02 18:16:37.053 DEBUG 2576 --- [http-nio-8080-exec-1] c.l.b.d.B.getAllIndexPageBlog_COUNT      : ==>  Preparing: SELECT count(0) FROM `t_blog` b, `t_type` t, `t_user` u WHERE b.published = true AND b.type_id = t.id AND u.id = b.user_id
2022-04-02 18:16:37.078 DEBUG 2576 --- [http-nio-8080-exec-1] c.l.b.d.B.getAllIndexPageBlog_COUNT      : ==> Parameters: 
2022-04-02 18:16:37.130 DEBUG 2576 --- [http-nio-8080-exec-1] c.l.b.d.B.getAllIndexPageBlog_COUNT      : <==      Total: 1
2022-04-02 18:16:37.136 DEBUG 2576 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllIndexPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.id typeId,t.name typeName,u.nickname, u.avatar from `t_blog` b, `t_type` t,`t_user` u where b.published = true and b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ?
2022-04-02 18:16:37.137 DEBUG 2576 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllIndexPageBlog    : ==> Parameters: 5(Integer)
2022-04-02 18:16:37.145 DEBUG 2576 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllIndexPageBlog    : <==      Total: 2
2022-04-02 18:16:37.147 DEBUG 2576 --- [http-nio-8080-exec-1] com.lot.blog.dao.TypeDao.getIndexType    : ==>  Preparing: select t.id tid,t.name,b.id bid ,b.title from `t_type`t,`t_blog` b where b.published = true and t.id = b.type_id order by t.id desc limit 4
2022-04-02 18:16:37.147 DEBUG 2576 --- [http-nio-8080-exec-1] com.lot.blog.dao.TypeDao.getIndexType    : ==> Parameters: 
2022-04-02 18:16:37.156 DEBUG 2576 --- [http-nio-8080-exec-1] com.lot.blog.dao.TypeDao.getIndexType    : <==      Total: 2
2022-04-02 18:16:37.157 DEBUG 2576 --- [http-nio-8080-exec-1] com.lot.blog.dao.TagDao.getIndexTag      : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from `t_tag` t,`t_blog` b,`t_blog_tag` bt where b.published = true and bt.blog_id = b.id and bt.tag_id = t.id order by tid desc limit 6
2022-04-02 18:16:37.158 DEBUG 2576 --- [http-nio-8080-exec-1] com.lot.blog.dao.TagDao.getIndexTag      : ==> Parameters: 
2022-04-02 18:16:37.180 DEBUG 2576 --- [http-nio-8080-exec-1] com.lot.blog.dao.TagDao.getIndexTag      : <==      Total: 3
2022-04-02 18:16:37.181 DEBUG 2576 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllReCommendBlog    : ==>  Preparing: select * from `t_blog` b where b.recommend = true and b.published = true order by b.update_time desc limit 4
2022-04-02 18:16:37.182 DEBUG 2576 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllReCommendBlog    : ==> Parameters: 
2022-04-02 18:16:37.187 DEBUG 2576 --- [http-nio-8080-exec-1] c.l.b.dao.BlogDao.getAllReCommendBlog    : <==      Total: 2
2022-04-02 18:16:37.191  INFO 2576 --- [http-nio-8080-exec-1] com.lot.blog.aspect.LogAspect            : Result : {}index
2022-04-02 18:17:52.989  INFO 2576 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-04-02 18:17:53.002  INFO 2576 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
